"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/Spotify.tsx":
/*!************************************!*\
  !*** ./src/components/Spotify.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Spotify: function() { return /* binding */ Spotify; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nconst Spotify = (param)=>{\n    let { link, style = {}, wide = false, width = wide ? \"100%\" : 600, height = wide ? 80 : 280, frameBorder = 0, allow = \"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\", ...props } = param;\n    const url = new URL(link);\n    // https://open.spotify.com/track/1KFxcj3MZrpBGiGA8ZWriv?si=f024c3aa52294aa1\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"iframe\", {\n        title: \"Terno do Binga\",\n        src: \"https://open.spotify.com/embed/playlist/2zGY63Qd2wIlYDsv6Cz6kK?utm_source=generator\",\n        // src={`https://open.spotify.com/embed${url.pathname}`}\n        width: width,\n        height: height,\n        allow: allow,\n        style: {\n            borderRadius: 14,\n            ...style\n        },\n        loading: \"lazy\",\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/rodrigonascimento/Desktop/Dev/terno/src/components/Spotify.tsx\",\n        lineNumber: 27,\n        columnNumber: 9\n    }, undefined);\n};\n_c = Spotify;\nvar _c;\n$RefreshReg$(_c, \"Spotify\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9TcG90aWZ5LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBYU8sTUFBTUEsVUFBVTtRQUFDLEVBQ3BCQyxJQUFJLEVBQ0pDLFFBQVEsQ0FBQyxDQUFDLEVBQ1ZDLE9BQU8sS0FBSyxFQUNaQyxRQUFRRCxPQUFPLFNBQVMsR0FBRyxFQUMzQkUsU0FBU0YsT0FBTyxLQUFLLEdBQUcsRUFDeEJHLGNBQWMsQ0FBQyxFQUNmQyxRQUFRLDRFQUE0RSxFQUNwRixHQUFHQyxPQUNTO0lBQ1osTUFBTUMsTUFBTSxJQUFJQyxJQUFJVDtJQUNwQiw0RUFBNEU7SUFDNUUscUJBQ0ksOERBQUNVO1FBQ0dDLE9BQU07UUFDTkMsS0FBSTtRQUNKLHdEQUF3RDtRQUN4RFQsT0FBT0E7UUFDUEMsUUFBUUE7UUFDUkUsT0FBT0E7UUFDUEwsT0FBTztZQUNIWSxjQUFjO1lBQ2QsR0FBR1osS0FBSztRQUNaO1FBQ0FhLFNBQVE7UUFDUCxHQUFHUCxLQUFLOzs7Ozs7QUFHckIsRUFBRTtLQTVCV1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvU3BvdGlmeS50c3g/MmVkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIEhUTUxBdHRyaWJ1dGVzIH0gZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBTcG90aWZ5UHJvcHMgZXh0ZW5kcyBIVE1MQXR0cmlidXRlczxIVE1MSUZyYW1lRWxlbWVudD4ge1xuW2tleTogc3RyaW5nXTogYW55XG5cbmxpbms6IHN0cmluZ1xud2lkZT86IGJvb2xlYW5cbndpZHRoPzogbnVtYmVyIHwgc3RyaW5nXG5oZWlnaHQ/OiBudW1iZXIgfCBzdHJpbmdcbmZyYW1lQm9yZGVyPzogbnVtYmVyIHwgc3RyaW5nXG5hbGxvdz86IHN0cmluZ1xufVxuXG5leHBvcnQgY29uc3QgU3BvdGlmeSA9ICh7XG4gICAgbGluayxcbiAgICBzdHlsZSA9IHt9LFxuICAgIHdpZGUgPSBmYWxzZSxcbiAgICB3aWR0aCA9IHdpZGUgPyBcIjEwMCVcIiA6IDYwMCxcbiAgICBoZWlnaHQgPSB3aWRlID8gODAgOiAyODAsXG4gICAgZnJhbWVCb3JkZXIgPSAwLFxuICAgIGFsbG93ID0gXCJhdXRvcGxheTsgY2xpcGJvYXJkLXdyaXRlOyBlbmNyeXB0ZWQtbWVkaWE7IGZ1bGxzY3JlZW47IHBpY3R1cmUtaW4tcGljdHVyZVwiLFxuICAgIC4uLnByb3BzXG59IDogU3BvdGlmeVByb3BzKSA9PiB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChsaW5rKTtcbiAgICAvLyBodHRwczovL29wZW4uc3BvdGlmeS5jb20vdHJhY2svMUtGeGNqM01acnBCR2lHQThaV3Jpdj9zaT1mMDI0YzNhYTUyMjk0YWExXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGlmcmFtZVxuICAgICAgICAgICAgdGl0bGU9XCJUZXJubyBkbyBCaW5nYVwiXG4gICAgICAgICAgICBzcmM9XCJodHRwczovL29wZW4uc3BvdGlmeS5jb20vZW1iZWQvcGxheWxpc3QvMnpHWTYzUWQyd0lsWURzdjZDejZrSz91dG1fc291cmNlPWdlbmVyYXRvclwiXG4gICAgICAgICAgICAvLyBzcmM9e2BodHRwczovL29wZW4uc3BvdGlmeS5jb20vZW1iZWQke3VybC5wYXRobmFtZX1gfVxuICAgICAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgICAgICBhbGxvdz17YWxsb3d9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogMTQsXG4gICAgICAgICAgICAgICAgLi4uc3R5bGVcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICBsb2FkaW5nPVwibGF6eVwiXG4gICAgICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIC8+XG4gICAgKTtcbn07XG5cbiJdLCJuYW1lcyI6WyJTcG90aWZ5IiwibGluayIsInN0eWxlIiwid2lkZSIsIndpZHRoIiwiaGVpZ2h0IiwiZnJhbWVCb3JkZXIiLCJhbGxvdyIsInByb3BzIiwidXJsIiwiVVJMIiwiaWZyYW1lIiwidGl0bGUiLCJzcmMiLCJib3JkZXJSYWRpdXMiLCJsb2FkaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Spotify.tsx\n"));

/***/ })

});